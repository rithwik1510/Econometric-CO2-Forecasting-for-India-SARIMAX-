# A friendly name for your workflow, which will show up in the "Actions" tab on GitHub
name: Run CO2 Forecast Script

# This section defines the trigger for the workflow.
# It will run every time you 'git push' to your 'main' branch.
on:
  push:
    branches: [ main ]

# This section defines the jobs to be run.
jobs:
  build:
    # The type of virtual machine to run the job on. 'ubuntu-latest' is a standard choice.
    runs-on: ubuntu-latest

    # These are the sequential steps the virtual machine will take.
    steps:
      # Step 1: Checks out your repository's code so the workflow can access it.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Sets up a Python environment on the virtual machine.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # You can change this to your Python version

      # Step 3: Installs the necessary Python libraries from your requirements.txt file.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Runs your Python script to generate the new plot.
      - name: Run the forecast script
        run: python forecast_co2.py

      # Step 5: Commits the newly generated 'forecast_plot.png' back to your repository.
      - name: Commit and push updated plot
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add forecast_plot.png
          # The following line will only commit if there are changes to the plot
          git diff --quiet && git diff --staged --quiet || git commit -m "Update forecast plot automatically"
          git push
